name: Continuous Integration

on:
  push:
    branches:
      - main
      - development
  pull_request:
    branches:
      - main
      - development

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v2

      # Step 2: Cache Node Modules
      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Step 3: Set Up Node.js
      - name: Set Up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      # Step 4: Install Dependencies
      - name: Install Dependencies
        run: npm install

      # Step 5: Run Tests
      - name: Run Tests
        run: npm test

      # Step 6: Set Docker Image Tag
      - name: Set Docker Image Tag
        id: vars
        run: |
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "IMAGE_TAG=latest" >> $GITHUB_ENV
          elif [ "${{ github.ref }}" == "refs/heads/development" ]; then
            echo "IMAGE_TAG=development" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == refs/tags/* ]]; then
            echo "IMAGE_TAG=${{ github.ref_name }}" >> $GITHUB_ENV
          else
            echo "IMAGE_TAG=unknown" >> $GITHUB_ENV
          fi

      # Step 7: Build Docker Image
      - name: Build Docker Image
        run: docker build -t liolax/my-devopssec-ca-app:${{ env.IMAGE_TAG }} .

      # Step 8: Docker Security Scan
      - name: Docker Security Scan
        run: docker run --rm aquasec/trivy image liolax/my-devopssec-ca-app:${{ env.IMAGE_TAG }}

      # Step 9: Push Docker Image to Docker Hub
      - name: Push Docker Image
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push liolax/my-devopssec-ca-app:${{ env.IMAGE_TAG }}
          
      # Step 10: Enhanced Health Check Validation
      - name: Test Health Endpoint
        run: |
          docker run -d --name health-check -p 80:80 liolax/my-devopssec-ca-app:${{ env.IMAGE_TAG }}
          sleep 5
          curl -f http://localhost:80/status || docker logs health-check
          docker stop health-check
          docker rm health-check
